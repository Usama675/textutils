{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Alert","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toLocaleUpperCase","showAlert","toLocaleLowerCase","clear","trim","split","length","defaultProps","aboutText","App","setAlert","message","setTimeout","_useState3","_useState4","setMode","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c478efc6.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n          <div className={`form-check form-switch text-${props.mode=='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'About text here',\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1); \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n \r\n    const handleUpClick = () => {\r\n        // console.log('Uppercase clicked')\r\n        let newText = text.toLocaleUpperCase();\r\n        setText(newText);\r\n        props.showAlert('Converted to uppercase!', 'success')\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        // console.log('Uppercase clicked')\r\n        let newText = text.toLocaleLowerCase();\r\n        setText(newText);\r\n        props.showAlert('Converted to lowercase!', 'success')\r\n    }\r\n\r\n    const changeColor = () => {\r\n        let newText = text.clear();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log('On Change')\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('Enter text here');\r\n    // text = \"new text\"; wrong way to change the state\r\n    // setText(\"new text\"); correct way to change the state\r\n\r\n    return (\r\n        <>\r\n        <div className='container' style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"myBox\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white' , color:props.mode==='dark'?'white':'black'}} rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convet to UpperCase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convet to LowerCase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={changeColor}>Change Text color</button>\r\n        </div>\r\n        <div className=\"container my-4\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h2>Yout text summary</h2>\r\n            <p>{text==\"\" ? \"0\":text.trim().split(\" \").length}words & {text.length} characters</p>\r\n            <p>{0.008*text.split(\" \").length}Minutes Read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:'Enter something in the above textbox to preview it here'}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport React, { useState } from 'react';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport Textform from './components/TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500)\n  }\n\n  const [mode, setMode] = useState('light'); //whether the dark mode is enabled or not\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#283854'\n      showAlert('Dark mode has been enabled', 'success')\n      document.title = 'TextUtils - Dark Mode';\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert('Light mode has been enabled', 'success')\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" aboutText=\"AboutTextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* <Route exact path=\"/about\" element={<About/>}> */}\n              \n            {/* </Route> */}\n            {/* <Route exact path=\"/\" element={ */}\n              <Textform heading=\"Enter the text to analyze\" mode={mode} showAlert={showAlert} />\n            {/* </Route> */}\n          {/* </Routes> */}\n\n        </div>\n      {/* </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}